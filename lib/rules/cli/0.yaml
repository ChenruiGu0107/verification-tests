---
:global_options:
  # these are options as seen by `oc options`
  :api_version: --api-version=<value>
  :ca: --certificate-authority=<value>
  :config: --config=<value>
  :context: --context=<value>
  :h: -h
  :help: --help
  :user: --user=<value>
  :insecure: --insecure-skip-tls-verify=<value>
  :namespace: --namespace=<value>
  :n: -n <value>
  :loglevel: --loglevel=<value>
  :log_dir: --log_dir=<value>
  :log_flush_frequency: --log_flush_frequency=<value>
  :logtostderr: --logtostderr=<value>
  :server: --server=<value>
  :stderrthreshold: --stderrthreshold=<value>
  :token: --token=<value>
:add_role_to_user:
  :cmd: oc policy add-role-to-user <role> <user_name>
:add_role_to_group:
  :cmd: oc policy add-role-to-group <role> <group_name>
:config:
  :cmd: oc config
  :options:
    :subcommand: <subcommand>
:config_view:
  :cmd: oc config view
  :options:
    :output: --output=<value>
  :expected:
    - "apiVersion: v"
    - "kind: Config"
  :optional_properties:
    :current_context: !ruby/regexp '/^current-context: (.+)/'
:create:
  :cmd: oc create
  :options:
    :f: -f <value>
    :filename: --filename=<value>
:delete:
  :cmd: oc delete <object_type>
  :options:
    :l: -l <value>
    :all: --all
    :object_name_or_id: <value>
:deploy:
  :cmd: oc deploy <deployment_config>
  :options:
    :cancel: --cancel
    :enable-triggers: --enable-triggers
    :latest: --latest
    :retry: --retry
:describe:
  :cmd: oc describe <resource> <name>
  :options:
    :l: -l <value>
    :selector: --selector=<value>
:edit:
  :cmd: oc edit
  :options:
    :filename: --filename=<value>
    :output: --output=<value>
:exec:
  # reorder global_options and options to allow specifying exec command
  :cmd: oc exec <pod> <global_options> <options>
  :options:
    :c: -c <value>
    :container: --container=<value>
    :stdin: --stdin=<value>
    :tty: --tty=<value>
    :t: -t
    :i: -i
    :oc_opts_end: --
    :exec_command: <value>
    :exec_command_arg: <value>
:exec_raw_oc_cmd_for_neg_tests:   # used for negative testing in which we want to deviate from yaml
  :cmd: oc
  :options:
    :arg: <value>
    :test_do_not_use: <value>
:expose:
  :cmd: oc expose <resource> <resource_name>
  :options:
    :route_port: --port=<value>
    :route_protocol: --protocol=<value>
    :target_port: --target-port=<value>
    :route_name: --name=<value>
    :route_type: --type=<value>
    :output: --output=<value>
    :o: -o <value>
:get:
  :cmd: oc get <resource>
  :options:
    :resource_name: <value>
    :output: --output=<value>
    :o: -o <value>
    :l: -l <value>
:help:
  :cmd: oc <help_word>
  :options:
    :command: <value>
:login:
  :cmd: oc login
  :options:
    :u: -u <value>
    :p: -p <value>
    :username: --username=<value>
    :password: --password=<value>
    :token: --token=<value>
  :optional_properties:
    :username: !ruby/regexp '/ogged into ".+?" as "(.+?)"/'
  :expected:
    # strange, sometimes "Already logged into..." is printed to console, and
    #   sometimes when run multiple times - not (oc v3.0.0.0)
    #   e.g. run multiple times `oc login --username=joe`
    - !ruby/regexp '/Login successful.|ogged into/'
:logout:
  :cmd: oc logout
  :expected:
    - !ruby/regexp '/Logged ".+" out on/'
:new_app:
  :cmd: oc new-app
  :options:
    :app_repo: <value>
    :labels: --labels=<value>
    :l: -l <value>
    :name: --name=<value>
    :strategy: --strategy=<value>
    :template: --template=<value>
    :output: --output=<value>
    :param: --param=<value>
    :insecure_registry: --insecure-registry=<value>
    :image_stream: --image-stream=<value>
    :image: --image=<value>
    :group: --group=<value>
    :file: --file=<value>
    :env: --env=<value>
    :docker_image: --docker-image=<value>
    :context_dir: --context-dir=<value>
    :code: --code=<value>
:new_project:
  :cmd: oc new-project <project_name>
  #:expected:
  #  - Created project <project_name>
  :options:
    :display_name: --display-name=<value>
    :description: --description=<value>
    :admin: --admin=<value>
:project:
  :cmd: oc project
  :options:
    :project_name: <value>
:remove_role_from_user:
  :cmd: oc policy remove-role-from-user <role> <user_name>
:remove_role_from_group:
  :cmd: oc policy remove-role-from-group <role> <group_name>
:rsh:
  :cmd: oc rsh
  :options:
    :app_name: <value>
:status:
  :cmd: oc status
:types:
  :cmd: oc types
:version:
  :cmd: oc version
  :expected:
    - oc v
    - kubernetes v
  :properties:
    :oc_version: !ruby/regexp '/^oc v(.+)$/'
    :kubernetes_version: !ruby/regexp '/kubernetes v(.+)$/'
:whoami:
  :cmd: oc whoami
  :options:
    :invalid_option:  -b   # for negative testing

#################### admin commands section

:oadm_add_cluster_role_to_user:
  :cmd: oadm policy add-cluster-role-to-user <role_name> <user_name>
:oadm_add_cluster_role_to_group:
  :cmd: oadm policy add-cluster-role-to-group <role_name> <group_name>
:oadm_add_role_to_user:
  :cmd: oadm policy add-role-to-user <role_name> <user_name>
:oadm_add_role_to_group:
  :cmd: oadm policy add-role-to-group <role_name> <group_name>
:oadm_new_project:
  :cmd: oadm new-project <project_name>
  :expected:
    - Created project <project_name>
  :options:
    :display_name: --display-name=<value>
    :description: --description=<value>
    :admin: --admin=<value>
:oadm_remove_cluster_role_from_user:
  :cmd: oadm policy remove-cluster-role-from-user <role_name> <user_name>
:oadm_remove_cluster_role_from_group:
  :cmd: oadm policy remove-cluster-role-from-group <role_name> <group_name>
:oadm_remove_role_from_user:
  :cmd: oadm policy remove-role-from-user <role_name> <user_name>
:oadm_remove_role_from_group:
  :cmd: oadm policy remove-role-from-group <role_name> <group_name>
:oadm_version:
  :cmd: oadm version
  :expected:
    - oadm v
    - kubernetes v
  :properties:
    :oadm_version: !ruby/regexp '/^oadm v(.+)$/'
    :kubernetes_version: !ruby/regexp '/kubernetes v(.+)$/'
