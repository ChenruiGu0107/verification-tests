---
:common:
  :base_url: https://<server>/oapi/<oapi_version>
  # array of headers to be included by default in each request
  :include_headers:
  - Accept
  - Content-Type
  - Authorization
  # Array of headers to be excluded (override includes), e.g. Content-Type.
  #   Keep default excludes always empty, because there's no way to override.
  :exclude_headers: []
  # default options
  :options:
    :oapi_version: v1
    :accept: application/json
    :content_type: application/json
  :headers:
    Accept: <accept>
    Content-Type: <content_type>
    Authorization: Bearer <oauth_token>
  # payload should be nil, in individual request rules it can be Hash when
  #   json is desired or anything accepted by RestClient;
  #   payload is handled interesting though. When it is a hash of param=>value
  #   pairs, then a param is included in request only if there is a key in the
  #   options hash (options[:myparam]) with a truish value. Then value of
  #   parameter in rules is scanned for <value> placeholder to be replaced with
  #   that value.
  #   If there is no <value> placeholder, then nothing is replaced. Each param
  #   rule value is also scanned for <something> placeholders to be replaced
  #   with options[:something]
  # :payload: nil
  # in the future we may put here client SSL certificate
  # :ssl_client_certificate: nil
:delete_oauthaccesstokens:
  :url: oauthaccesstokens/<oauth_token>
  :method: DELETE
:list_projects:
  :url: projects
  :method: GET
:create_project_request:
  :method: POST
  :url: projectrequests
  :payload:
    :description: <description>
    :displayName: <displayName>
