---
apiVersion: v1
items:
- kind: Service
  apiVersion: v1
  metadata:
    name: service-secure
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: serving-cert
  spec:
    ports:
    - name: https
      protocol: TCP
      port: 27443
      targetPort: 8443
    selector:
      name: caddy-docker
- kind: Pod
  apiVersion: v1
  metadata:
    name: caddy-docker
    labels:
      name: caddy-docker
  spec:
    containers:
    - name: caddy-docker-pod
      image: quay.io/openshifttest/caddy-docker@sha256:a88247b9b2a35e0c0a9bc67506971a39fc5a0196b9a1d9ead49ae5fa4b48dfa5
      command:
        - /usr/bin/caddy
      args:
        - --conf
        - /etc/caddy/Caddyfile
      ports:
      - containerPort: 8080
      - containerPort: 8443
      volumeMounts:
        - name: cert
          mountPath: /etc/serving-cert
        - name: conf
          mountPath: /etc/caddy
    volumes:
      - name: conf
        configMap:
          name: serving-cert
      - name: cert
        secret:
          secretName: serving-cert
- kind: Pod
  apiVersion: v1
  metadata:
    name: caddy-docker-2
    labels:
      name: caddy-docker
  spec:
    containers:
    - name: caddy-docker-pod
      image: quay.io/openshifttest/caddy-docker-2@sha256:1e6184a09a0bd2f6e075dc302daa64769e664bfe0e180357cc77f95ce5c46243
      command:
        - /usr/bin/caddy
      args:
        - --conf
        - /etc/caddy/Caddyfile
      ports:
      - containerPort: 8080
      - containerPort: 8443
      volumeMounts:
        - name: cert
          mountPath: /etc/serving-cert
        - name: conf
          mountPath: /etc/caddy
    volumes:
      - name: conf
        configMap:
          name: serving-cert
      - name: cert
        secret:
          secretName: serving-cert
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: serving-cert
  data:
    Caddyfile: |
      :8443 {
           tls /etc/serving-cert/tls.crt /etc/serving-cert/tls.key
           root /srv/publics
            browse /test
         }
      :8080 {
           root /srv/public
           browse /test
      }

kind: List
